{"version":3,"sources":["../../src/middleware/auth.middleware.js"],"names":["req","res","next","_id","user","currentUser","role","status","send"],"mappings":";;;;;;;;;;;;;AAKA;;;;;;;;;;;0BAEe,iBAAOA,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHC,YAAAA,GAFG,GAEKH,GAAG,CAACI,IAFT,CAEHD,GAFG;AAAA;AAAA,mBAGe,mBAAQ;AAAEA,cAAAA,GAAG,EAAHA;AAAF,aAAR,CAHf;;AAAA;AAGLE,YAAAA,WAHK;;AAAA,kBAIPA,WAAW,CAACC,IAAZ,KAAqB,QAJd;AAAA;AAAA;AAAA;;AAAA,6CAKFL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,eAArB,CALE;;AAAA;AAMXN,YAAAA,IAAI;AANO;AAAA;;AAAA;AAAA;AAAA;AAQXA,YAAAA,IAAI,aAAJ;;AARW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/**\n * @fileOverview contains middleware that authorise admin previlages only\n * @author brian omondi\n * @version 0.0.1\n */\nimport { findOne } from \"../models/user.model\";\n\nexport default async (req, res, next) => {\n  try {\n    const { _id } = req.user;\n    const currentUser = await findOne({ _id });\n    if (currentUser.role === \"normal\")\n      return res.status(401).send(\"ACCESS DENIED\");\n    next();\n  } catch (error) {\n    next(error);\n  }\n};\n"],"file":"auth.middleware.js"}