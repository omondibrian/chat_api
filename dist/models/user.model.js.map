{"version":3,"sources":["../../src/models/user.model.js"],"names":["userSchema","Schema","name","type","String","required","min","max","email","password","dateOfRegistration","Date","now","profileImage","contacts","blockedContacts"],"mappings":";;;;;;;;;;;AAOA;;AAPA;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,IAAMA,UAAU,GAAG,IAAIC,gBAAJ,CAAW;AAC5BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE,IAFN;AAGJC,IAAAA,GAAG,EAAE,CAHD;AAIJC,IAAAA,GAAG,EAAE;AAJD,GADsB;AAQ5BC,EAAAA,KAAK,EAAE;AACLL,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,QAAQ,EAAE,IAFL;AAGLC,IAAAA,GAAG,EAAE,CAHA;AAILC,IAAAA,GAAG,EAAE;AAJA,GARqB;AAc5BE,EAAAA,QAAQ,EAAE;AACRN,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE,IAFF;AAGRE,IAAAA,GAAG,EAAE,IAHG;AAIRD,IAAAA,GAAG,EAAE;AAJG,GAdkB;AAoB5BI,EAAAA,kBAAkB,EAAE;AAClBP,IAAAA,IAAI,EAAEQ,IADY;AAElB,eAASA,IAAI,CAACC;AAFI,GApBQ;AAwB5BC,EAAAA,YAAY,EAAE;AAAEV,IAAAA,IAAI,EAAEC;AAAR,GAxBc;AAyB5BU,EAAAA,QAAQ,EAAE;AACRX,IAAAA,IAAI,EAAE,CAACC,MAAD;AADE,GAzBkB;AA4B5BW,EAAAA,eAAe,EAAE;AACfZ,IAAAA,IAAI,EAAE,CAACC,MAAD;AADS;AA5BW,CAAX,CAAnB;;eAgCe,qBAAM,MAAN,EAAcJ,UAAd,C","sourcesContent":["/**\n * @fileOverview  it describes the users schema i.e how data will be structured in\n * the mongoose database\n * @author brian omondi\n * @version 0.0.1\n */\n\nimport { Schema, model } from \"mongoose\";\n\n// const contactSchema = new Schema({\n//     userId:{\n//         type:String,\n//         required:true,\n//         max:255\n//     },\n\n// })\n\nconst userSchema = new Schema({\n  name: {\n    type: String,\n    required: true,\n    min: 6,\n    max: 255\n  },\n\n  email: {\n    type: String,\n    required: true,\n    min: 6,\n    max: 255\n  },\n  password: {\n    type: String,\n    required: true,\n    max: 1024,\n    min: 6\n  },\n  dateOfRegistration: {\n    type: Date,\n    default: Date.now\n  },\n  profileImage: { type: String },\n  contacts: {\n    type: [String]\n  },\n  blockedContacts: {\n    type: [String]\n  }\n});\nexport default model(\"User\", userSchema);\n"],"file":"user.model.js"}