{"version":3,"sources":["../../src/routes/auth.routes.js"],"names":["router","require","Router","storage","multer","memoryStorage","filefilter","req","file","cb","mimetype","upload","fileFilter","post","single","register_user","log_in_user","verified","getUsers","get","getUser","put","changeUserProfile","forgotPass","searchFriends","addContact"],"mappings":";;;;;;;;;AAOA;;AAUA;;AACA;;;;;;;;AAlBA;;;;;AAMA,IAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,MAAnB,EAAf;;AAcA,IAAMC,OAAO,GAAGC,mBAAOC,aAAP,EAAhB;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AACpC,MAAID,IAAI,CAACE,QAAL,KAAkB,YAAlB,IAAkCF,IAAI,CAACE,QAAL,KAAkB,WAAxD,EAAqE;AACnED,IAAAA,EAAE,CAAC,IAAD,EAAO,IAAP,CAAF;AACD,GAFD,MAEO;AACLA,IAAAA,EAAE,CAAC,IAAD,EAAO,KAAP,CAAF;AACD;AACF,CAND;AAQA;;;AACA,IAAME,MAAM,GAAG,wBAAO;AACpBR,EAAAA,OAAO,EAAEA,OADW;AAEpBS,EAAAA,UAAU,EAAEN;AAFQ,CAAP,CAAf;AAKA;;;;;;;;AAOAN,MAAM,CAACa,IAAP,CAAY,WAAZ,EAAyBF,MAAM,CAACG,MAAP,CAAc,cAAd,CAAzB,EAAwDC,mBAAxD;AAEA;;;;;;;;;AAQAf,MAAM,CAACa,IAAP,CAAY,QAAZ,EAAsBG,iBAAtB,E,CACA;;AACAhB,MAAM,CAACa,IAAP,CAAY,QAAZ,EAAsBI,sBAAtB,EAAgCC,cAAhC;AACAlB,MAAM,CAACmB,GAAP,CAAW,MAAX,EAAmBF,sBAAnB,EAA6BG,aAA7B;AACApB,MAAM,CAACqB,GAAP,CAAW,GAAX,EAAgBV,MAAM,CAACG,MAAP,CAAc,cAAd,CAAhB,EAA+CG,sBAA/C,EAAyDK,uBAAzD;AACAtB,MAAM,CAACa,IAAP,CAAY,aAAZ,EAA2BU,gBAA3B;AACAvB,MAAM,CAACa,IAAP,CAAY,GAAZ,EAAiBI,sBAAjB,EAA2BO,mBAA3B;AACAxB,MAAM,CAACqB,GAAP,CAAW,aAAX,EAA0BJ,sBAA1B,EAAoCQ,gBAApC;eACezB,M","sourcesContent":["/**\n * @fileOverview this is the authorisation routes\n * @author brian omondi\n * @version 0.0.1\n */\n\nconst router = require(\"express\").Router();\nimport {\n  register_user,\n  log_in_user,\n  getUsers,\n  changeUserProfile,\n  forgotPass,\n  getUser,\n  searchFriends,\n  addContact\n} from \"../controller/auth.controller\";\nimport verified from \"../middleware/verfyToken.middleware\";\nimport multer, { diskStorage } from \"multer\";\n\nconst storage = multer.memoryStorage()\nconst filefilter = (req, file, cb) => {\n  if (file.mimetype === \"image/jpeg\" || file.mimetype === \"image/png\") {\n    cb(null, true);\n  } else {\n    cb(null, false);\n  }\n};\n\n/**@constant */\nconst upload = multer({\n  storage: storage,\n  fileFilter: filefilter\n});\n\n/**registration route\n * @param req this passes the requests from the user to the server\n * @param res this is the response given back to the client side\n * @example\n * this is accessed via this end point\n * https:localhost/api/user/register\n */\nrouter.post(\"/register\", upload.single(\"profileImage\"), register_user);\n\n/**login route\n * @param req\n * @param res\n * this is how the routes param are used\n * @example\n * https:localhost/api/user/login\n * to acess your login authorization token -> AUTH_TOKEN\n */\nrouter.post(\"/login\", log_in_user);\n// router.post(\"/verify\", activateAccount);\nrouter.post(\"/users\", verified, getUsers);\nrouter.get(\"/:id\", verified, getUser);\nrouter.put(\"/\", upload.single(\"profileImage\"), verified, changeUserProfile);\nrouter.post(\"/forgotpass\", forgotPass);\nrouter.post(\"/\", verified, searchFriends);\nrouter.put(\"/addContact\", verified, addContact);\nexport default router;\n"],"file":"auth.routes.js"}