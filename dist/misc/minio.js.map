{"version":3,"sources":["../../src/misc/minio.js"],"names":["minioHost","process","env","MINIO_HOST","minioBucket","minioAcessKey","MINIO_ACCESS_KEY","minioSecretKey","MINIO_SECRET_KEY","initMinIO","console","log","client","Client","endPoint","port","useSSL","AccessKey","SecretKey","bucketExists","makeBucket","Promise","resolve","setTimeout"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;AACA,IAAMA,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAAZ,IAA0B,WAA5C;AACA,IAAMC,WAAW,GAAG,eAApB;AACA,IAAMC,aAAa,GAAGJ,OAAO,CAACC,GAAR,CAAYI,gBAAZ,IAAgC,YAAtD;AACA,IAAMC,cAAc,GAAGN,OAAO,CAACC,GAAR,CAAYM,gBAAZ,IAAgC,YAAvD;;SACsBC,S;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACHC,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACMC,YAAAA,MAFH,GAEY,IAAKC,aAAL,CAAY;AACzBC,cAAAA,QAAQ,EAAEd,SADe;AAEzBe,cAAAA,IAAI,EAAE,IAFmB;AAGzBC,cAAAA,MAAM,EAAE,KAHiB;AAIzBC,cAAAA,SAAS,EAAE,YAJc;AAKzBC,cAAAA,SAAS,EAAE;AALc,aAAZ,CAFZ,EASH;AACA;;AAVG;AAAA;AAAA,mBAYaN,MAAM,CAACO,YAAP,CAAoBf,WAApB,CAZb;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAaSQ,MAAM,CAACQ,UAAP,CAAkBhB,WAAlB,CAbT;;AAAA;AAcGM,YAAAA,OAAO,CAACC,GAAR,WAAeP,WAAf;;AAdH;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBAkBO,IAAIiB,OAAJ,CAAY,UAAAC,OAAO;AAAA,qBAAIC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAd;AAAA,aAAnB,CAlBP;;AAAA;AAqBHZ,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AArBG,6CAsBIC,MAtBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import {Client} from \"minio\";\nconst minioHost = process.env.MINIO_HOST || 'localhost'\nconst minioBucket = 'image-storage'\nconst minioAcessKey = process.env.MINIO_ACCESS_KEY || 'minioadmin'\nconst minioSecretKey = process.env.MINIO_SECRET_KEY || \"minioadmin\"\nexport async function initMinIO() {\n    console.log('Initialising MinIO...')\n    const client = new  Client({\n      endPoint: minioHost,\n      port: 9000,\n      useSSL: false,\n      AccessKey: 'minioadmin' ,\n      SecretKey: 'minioadmin' \n    })\n    // let success = false\n    // while (!success) {\n      try {\n        if (!(await client.bucketExists(minioBucket))) {\n          await client.makeBucket(minioBucket)\n          console.log(`${minioBucket} has been made sucessfully`)\n        }\n        \n      } catch {\n        await new Promise(resolve => setTimeout(resolve, 1000))\n      }\n    \n    console.log('MinIO initialised')\n    return client\n  }"],"file":"minio.js"}